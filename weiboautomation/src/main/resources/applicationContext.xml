<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task.xsd">

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:pp.properties</value>
				<value>classpath:mysql.properties</value>
				<value>classpath:sae.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url">
			<value>${mysql.url}</value>
		</property>
		<property name="username">
			<value>${mysql.username}</value>
		</property>
		<property name="password">
			<value>${mysql.password}</value>
		</property>
		<property name="initialSize">
			<value>1</value>
		</property>
		<property name="maxActive">
			<value>20</value>
		</property>
		<property name="maxIdle">
			<value>20</value>
		</property>
		<property name="minIdle">
			<value>5</value>
		</property>
		<property name="maxWait">
			<value>60000</value>
		</property>
		<property name="removeAbandoned">
			<value>true</value>
		</property>
		<property name="removeAbandonedTimeout">
			<value>300</value>
		</property>
		<property name="testWhileIdle">
			<value>true</value>
		</property>
		<property name="testOnBorrow">
			<value>true</value>
		</property>
		<property name="testOnReturn">
			<value>true</value>
		</property>
		<property name="validationQuery">
			<value>select 1</value>
		</property>
		<property name="validationQueryTimeout">
			<value>1</value>
		</property>
		<property name="timeBetweenEvictionRunsMillis">
			<value>1800000</value>
		</property>
		<property name="numTestsPerEvictionRun">
			<value>20</value>
		</property>
		<property name="minEvictableIdleTimeMillis">
			<value>1800000</value>
		</property>
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="serviceOperation"
			expression="execution(* org.weiboautomation.service.*Service.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />
	</aop:config>

	<!-- DAO -->
	<bean id="ppTidTypeDao" class="org.weiboautomation.dao.jdbc.PpTidTypeJdbcDao">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>

	<bean id="blogDao" class="org.weiboautomation.dao.jdbc.BlogJdbcDao">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>

	<bean id="transferingUserDao" class="org.weiboautomation.dao.jdbc.TransferingUserJdbcDao">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>

	<bean id="typeDao" class="org.weiboautomation.dao.jdbc.TypeJdbcDao">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>

	<bean id="publishingUserDao" class="org.weiboautomation.dao.jdbc.PublishingUserJdbcDao">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>

	<bean id="queryingUserDao" class="org.weiboautomation.dao.jdbc.QueryingUserJdbcDao">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>

	<bean id="collectingUserDao" class="org.weiboautomation.dao.jdbc.CollectingUserJdbcDao">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>

	<bean id="userDao" class="org.weiboautomation.dao.jdbc.UserJdbcDao">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>

	<bean id="followingUserDao" class="org.weiboautomation.dao.jdbc.FollowingUserJdbcDao">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>

	<bean id="followedUserDao" class="org.weiboautomation.dao.jdbc.FollowedUserJdbcDao">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>

	<!-- Service -->
	<bean id="ppTidTypeService" class="org.weiboautomation.service.impl.PpTidTypeServiceImpl">
		<property name="ppTidTypeDao" ref="ppTidTypeDao" />
	</bean>

	<bean id="blogService" class="org.weiboautomation.service.impl.BlogServiceImpl">
		<property name="blogDao" ref="blogDao" />
	</bean>

	<bean id="transferingUserService"
		class="org.weiboautomation.service.impl.TransferingUserServiceImpl">
		<property name="transferingUserDao" ref="transferingUserDao" />
	</bean>

	<bean id="typeService" class="org.weiboautomation.service.impl.TypeServiceImpl">
		<property name="typeDao" ref="typeDao" />
	</bean>

	<bean id="publishingUserService"
		class="org.weiboautomation.service.impl.PublishingUserServiceImpl">
		<property name="publishingUserDao" ref="publishingUserDao" />
	</bean>

	<bean id="queryingUserService"
		class="org.weiboautomation.service.impl.QueryingUserServiceImpl">
		<property name="queryingUserDao" ref="queryingUserDao" />
	</bean>

	<bean id="collectingUserService"
		class="org.weiboautomation.service.impl.CollectingUserServiceImpl">
		<property name="collectingUserDao" ref="collectingUserDao" />
	</bean>

	<bean id="userService" class="org.weiboautomation.service.impl.UserServiceImpl">
		<property name="userDao" ref="userDao" />
	</bean>

	<bean id="followingUserService"
		class="org.weiboautomation.service.impl.FollowingUserServiceImpl">
		<property name="followingUserDao" ref="followingUserDao" />
	</bean>

	<bean id="followedUserService"
		class="org.weiboautomation.service.impl.FollowedUserServiceImpl">
		<property name="followedUserDao" ref="followedUserDao" />
	</bean>

	<!-- Handler -->
	<bean id="ppHandler" class="org.weiboautomation.handler.PpHandler"
		init-method="initialize" />

	<bean id="weiboHandler" class="org.weiboautomation.handler.WeiboHandler"
		init-method="initialize" />

	<bean id="vdiskHandler" class="org.weiboautomation.handler.VdiskHandler" />

	<bean id="saeStorageHandler" class="org.weiboautomation.handler.SaeStorageHandler" />

	<bean id="saeAppBatchhelperHandler" class="org.weiboautomation.handler.SaeAppBatchhelperHandler" />

	<bean id="weiboApiHandler" class="org.weiboautomation.handler.WeiboApiHandler"
		init-method="initialize" />

	<!-- Action -->
	<bean id="weiboAutomationAction" class="org.weiboautomation.action.WeiboAutomationAction"
		init-method="initialize">
		<property name="ppHandler" ref="ppHandler" />
		<property name="ppUsername">
			<value>${pp.username}</value>
		</property>
		<property name="ppPassword">
			<value>${pp.password}</value>
		</property>
		<property name="ppTidTypeService" ref="ppTidTypeService" />
		<property name="blogService" ref="blogService" />
		<property name="transferingUserService" ref="transferingUserService" />
		<property name="transferingBlogSize">
			<value>1</value>
		</property>
		<property name="weiboHandler" ref="weiboHandler" />
		<property name="typeService" ref="typeService" />
		<property name="vdiskHandler" ref="vdiskHandler" />
		<property name="saeStorageHandler" ref="saeStorageHandler" />
		<property name="saeStorageAccessKey">
			<value>${storage.accessKey}</value>
		</property>
		<property name="saeStorageSecretKey">
			<value>${storage.secretKey}</value>
		</property>
		<property name="publishingBlogSize">
			<value>1</value>
		</property>
		<property name="publishingUserService" ref="publishingUserService" />
		<property name="saeAppBatchhelperHandler" ref="saeAppBatchhelperHandler" />
		<property name="queryingUserService" ref="queryingUserService" />
		<property name="collectingUserService" ref="collectingUserService" />
		<property name="weiboApiHandler" ref="weiboApiHandler" />
		<property name="userService" ref="userService" />
		<property name="filteringUserSize">
			<value>2000</value>
		</property>
		<property name="followingUserService" ref="followingUserService" />
		<property name="followingUserSize">
			<value>25</value>
		</property>
		<property name="followedUserService" ref="followedUserService" />
		<property name="reservingFollowedDays">
			<value>5</value>
		</property>
	</bean>

	<!-- Task -->
	<task:scheduler id="scheduler" pool-size="10" />
	<task:scheduled-tasks scheduler="scheduler">
		<task:scheduled ref="weiboAutomationAction" method="collectBlogs"
			fixed-delay="60000" />
		<task:scheduled ref="weiboAutomationAction" method="transferBlogs"
			fixed-delay="60000" />
		<task:scheduled ref="weiboAutomationAction" method="publishBlogs"
			cron="0 0 0,2,4,6,8,10,12,14,16,18,20,22 * * ?" />
		<task:scheduled ref="weiboAutomationAction" method="collectAndFilterUsers"
			fixed-delay="60000" />
		<task:scheduled ref="weiboAutomationAction" method="followAndUnfollowUsers"
			cron="0 0 0,2,4,6,8,10,12,14,16,18,20,22 * * ?" />
	</task:scheduled-tasks>

</beans>